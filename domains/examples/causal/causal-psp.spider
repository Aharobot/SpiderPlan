FlowModule main:		
	modules = "PrologPreprocessor,Solver";
	rules = { 
		Start => PrologPreprocessor;
		PrologPreprocessor => Solver ;
		Solver => Solver.Consistent => Success  ;
		Solver => Solver.Inconsistent => Fail  ;
	};
	keepTimes=true;
	keepStatistics=true;
	verbose=false;
	verbosity=1;

PrologPreprocessor PrologPreprocessor:
	keepStatistics=true;
	verbose=false;
	verbosity=2;
		
SolverStack Solver:		
	solvers = "Domain,Temporal,Scheduler,Planner,Finally";
	keepTimes=true;
	keepStatistics=true;
	verbose=false;
	verbosity=3;
	
SolverStack ConsistencyChecker:		
	solvers = "Temporal,Scheduler";
	keepTimes=true;
	keepStatistics=true;
	verbose=false;
	verbosity=3;

DomainSolver Domain:	
	keepStatistics=true;
	verbose=false;
	verbosity=4;

STPSolver Temporal:
	historySize=10;
	static=true;
	keepTimes=true;
	keepStatistics=true;
	verbose=true;
	verbosity=1;	
	
SchedulingSolver Scheduler:
	verbose=false;
	verbosity=3;
		
OpenGoalResolverAllFlaws Planner:
	queueStyle="MultiQueue";
	heuristics="HAddReuse";
	consistencyChecker="ConsistencyChecker";
	keepTimes=true;
	keepStatistics=true;
	verbose=true;	
	verbosity=3;

FinallySolver Finally:
	verbose=true;
	verbosity=2;
