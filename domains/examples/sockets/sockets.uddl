(:initial-context
	(:domain
		(enum t {x y z})
		(enum received_t { (answer t) })
		(sig received t)
		(sig send t)
	)

	(:statement
		(I_send_1 send x)
		(I_send_2 send y)
		(I_send_3 send z)
	)
	
	;;(:execution
	
		(:observation ;; wait for matching statement to be observed during execution
			(I_received_1 received z)
		)
		(:sockets
			(connect my-socket localhost 12345)
			
			(receive my-socket received (answer (timestamp ?date ?time) ?value)
				(msg ?date ?time ?value)
				{ (head "(msg ") (tail ")") (replace "\[" "") (replace "\]" "") (replace "," " ") }
				
			)
			
			
			(send my-socket send ?x)
		)
		
	;;)

	(:temporal
		(planning-interval [0 100])
		(at I_send_1 [5 inf] [6 inf])
		(at I_send_2 [20 inf] [21 inf])
		(at I_send_3 [30 inf] [31 inf])
	)


)
