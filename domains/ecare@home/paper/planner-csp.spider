FlowModule main:		
	modules = "PrologPreprocessor,Solver";
	rules = { 
		Start => PrologPreprocessor;
		PrologPreprocessor => Solver ;
		Solver => Solver.Consistent => Success  ;
		Solver => Solver.Inconsistent => Fail  ;
	};
	keepTimes=true;
	keepStatistics=true;
	verbose=false;
	verbosity=1;

PrologPreprocessor PrologPreprocessor:
	keepStatistics=true;
	verbose=false;
	verbosity=2;
		
SolverStack Solver:		
	solvers = "Domain,Temporal,Math,Cost,Scheduler,Graph,ICSolver,Planner,CP,Finally";
	timeout = 1;
	keepTimes=true;
	keepStatistics=true;
	verbose=false;
	verbosity=3;

DomainSolver Domain:	
	keepStatistics=true;
	verbose=false;
	verbosity=4;

ConfigurationPlanningSolver CP:
	keepTimes=true;
	verbose=false;
	verbosity = 4;

MathSolver Math:
	verbose=false;
	verbosity=2;

CostSolver Cost:
	verbose=false;
	verbosity=3;

FinallySolver Finally:
	verbose=false;
	verbosity=2;
	

STPSolver Temporal:
	static=true;
	keepTimes=true;
	keepStatistics=true;
	verbose=false;
	verbosity=10;	

SchedulingSolver Scheduler:
	verbose=false;
	verbosity=0;

GraphSolver Graph:
	verbose=false;
	verbosity=4;

InteractionConstraintSolver ICSolver:
	consistencyChecker="ICChecker";
	keepTimes=true;
	keepStatistics=true;
	verbose=false;
	verbosity=1;

SolverStack ICChecker:		
	solvers = "Domain,Temporal,Scheduler";
	keepTimes=true;
	keepStatistics=true;
	verbose=false;
	verbosity=0;
	optimization=false;
		
SolverStack ConsistencyChecker:		
	solvers = "Temporal,Scheduler";
	keepTimes=true;
	keepStatistics=true;
	verbose=false;
	verbosity=3;
	
OpenGoalResolverAllFlaws Planner:
	queueStyle="MultiQueue";
	heuristics="HAddReuse";
	consistencyChecker="ConsistencyChecker";
	keepTimes=true;
	keepStatistics=true;
	verbose=false;	
	verbosity=3;
	
ForwardPlanningModule Planner1:
	lookAhead=0;
	queueStyle="MultiQueue";
	heuristics="CausalGraph,FastForward"; 
	consistencyChecker="ConsistencyChecker";
	multiEffectSupport=true;
	yahspLookahead=true;
	//t0=0;
	uniqueInitialState=true;
	nodeEquality="ResultingStateBased";
	keepTimes=false;
	keepStatistics=true;
	verbose=false;//false; 
	verbosity=4;

STPSolver TemporalStepChecker:
	historySize=5;
	keepTimes=true;
	static=true;
	keepStatistics=true;
	verbose=false;
	verbosity=1;
