import sys
import random


conceptPrefix = "c"

numProblems = int(sys.argv[1])
numGoals = int(sys.argv[2])
maxST = int(sys.argv[3])
minDuration = int(sys.argv[4])
maxDuration = int(sys.argv[5])
n_concepts = int(sys.argv[6])
targetFolder = sys.argv[7]

possibleGoals = []
for i in range(n_concepts):
	possibleGoals.append("%s%d"%(conceptPrefix,i+1))



def addZeros(s,n):
	return "0"*(n-len(s))+s

for p in range(1,numProblems+1):
	G = []
	G_CSP = []
	TCs = []
	
	for i in range(1, numGoals+1):
		pick = random.randint(0,len(possibleGoals)-1)
		st = random.randint(0,maxST)
		dur = random.randint(minDuration,maxDuration)
		
		g = "(G%d (inferring %s))" % (i,possibleGoals[pick])
		tc = "(at G%d [0 %d] [%d inf])" % (i,st,st+dur)
		
		g_csp = "(goal G%d %s)" %(i, possibleGoals[pick])
		
		G_CSP.append(g_csp)
		G.append(g)
		TCs.append(tc)

	
	s1 = "(:initial-context\n\t(:goal\n"
	s2 = "(:initial-context\n\t(:task\n"
	s3 = "(:initial-context\n\t(:configuration-planning\n"
	
	
	for g in G:
		s1 += "\t\t" + g + "\n"
		s2 += "\t\t" + g + "\n"
	for g in G_CSP:
		s3 += "\t\t" + g + "\n"
		
	s1 += "\t)\n\t(:temporal\n"
	s2 += "\t)\n\t(:temporal\n"
	s3 += "\t)\n\t(:temporal\n"
		
	for tc in TCs:
		s1 += "\t\t" + tc + "\n"
		s2 += "\t\t" + tc + "\n"
		s3 += "\t\t" + tc + "\n"

	s1 += "\n\t)\n)"
	s2 += "\n\t)\n)"
	s3 += "\n\t)\n)"
	
	fName1 = "goal-problem%s.uddl" %(addZeros(str(p),3))
	fName2 = "task-problem%s.uddl" %(addZeros(str(p),3))
	fName3 = "csp-problem%s.uddl" %(addZeros(str(p),3))
	
	f = open(fName1, "w")
	f.write(s1)
	f.close()
	
	f = open(fName2, "w")
	f.write(s2)
	f.close()
	
	f = open(fName3, "w")
	f.write(s3)
	f.close()


