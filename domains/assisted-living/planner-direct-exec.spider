FlowModule main:		
	modules = "PrologPreprocessor,Execution";
	rules = { 
		Start => PrologPreprocessor;
		PrologPreprocessor => Execution  ;
		Execution => Execution.Consistent => Success ;
		Execution => Execution.Inconsistent => Fail ;
	};
	keepTimes=false;
	keepStatistics=true;
	verbose=true;//true;
	verbosity=1;
	
SolverStack RepairSolver:		
	solvers = "Domain,Costs,Sets,Prolog,Temporal,Scheduler,Interaction";
	keepTimes=false;
	keepStatistics=true;
	verbose=true;//true;
	verbosity=3;
	
SolverStack FromScratchSolver:		
	solvers = "Domain,Costs,Sets,Prolog,Temporal,Scheduler,Interaction,ExecPlanner,Finally";
	keepTimes=false;
	keepStatistics=true;
	verbose=true;//true;
	verbosity=3;
	
SolverStack Solver2:		
	solvers = "Domain,Costs,Sets,Temporal,Interaction2";
	keepTimes=false;
	keepStatistics=true;
	verbose=true;//true;
	verbosity=0;

SolverStack Solver3:		
	solvers = "Domain,Costs,Sets,Temporal";
	keepTimes=false;
	keepStatistics=true;
	verbose=true;//true;
	verbosity=0;

ExecutionModule Execution:
	repairSolver = "RepairSolver";
	fromScratchSolver = "FromScratchSolver";
	keepTimes=true;
	keepStatistics=true;
	verbose=true;
	verbosity=3;
	
ProbabilisticSolver ProbSolver:
	verbose=true;
	verbosity=1;

InteractionConstraintSolver Interaction:
	consistencyChecker="Solver2";
	keepTimes=false;
	keepStatistics=true;
	verbose=false;//true;
	verbosity=4;
	
InteractionConstraintSolver Interaction2:
	consistencyChecker="Solver3";
	keepTimes=false;
	keepStatistics=true;
	verbose=false;//true;
	verbosity=4;
	
FinallySolver Finally:
	keepStatistics=true;
	verbose=true;//true;
	verbosity=3;
	
PrologPreprocessor PrologPreprocessor:
// 	failBehavior="Exit";
	keepStatistics=true;
	verbose=true;//true;
	verbosity=4;
	
PrologSolver Prolog:
	keepStatistics=true;
	verbose=true;//true;
	verbosity=1;

ForwardPlanningModule Planner:
	lookAhead=0;
	queueStyle="MultiQueue";
	heuristics="CausalGraph,FastForward,HAdd"; 
	//consistencyChecker="TemporalStepChecker";
	multiEffectSupport=false;
// 	yahspLookahead=false;
	t0=0;
	uniqueInitialState=true;
	nodeEquality="ResultingStateBased";
	keepTimes=false;
	keepStatistics=true;
	verbose=true;//false; 
	verbosity=2;

ForwardPlanningModule ExecPlanner:
	lookAhead=0;
	queueStyle="MultiQueue";
	heuristics="CausalGraph,FastForward"; 
	consistencyChecker="TemporalStepChecker";
	multiEffectSupport=false;
	yahspLookahead=true;
	//t0=0;
	uniqueInitialState=true;
	nodeEquality="ResultingStateBased";
	keepTimes=false;
	keepStatistics=true;
	verbose=true;//false; 
	verbosity=2;
	
STPSolver Temporal:
	useBookmarks=false;
	keepTimes=false;
	static=false;
	initNumActivities=600;
	numActivitiesInc=200;
	keepStatistics=true;
	verbose=true;//true;
	verbosity=1;

DomainSolver Domain:	
	keepStatistics=true;
	verbose=true;//true;
	verbosity=1;
	
SetSolver Sets:
	keepStatistics=true;
	verbose=true;//true;
	verbosity=0;
	
CostSolver Costs:
	keepStatistics=true;
	verbose=true;//true;
	verbosity=0;

STPSolver TemporalStepChecker:
	useBookmarks=false;
	useFrameConstraints=false;
	keepTimes=true;
	static=true;
	initNumActivities=600;
	numActivitiesInc=200;
	keepStatistics=true;
	verbose=true;//true;
	verbosity=1;

	
SchedulingSolver Scheduler:
	keepTimes=true;
	verbose=true;
	verbosity=5;
