/*
 * This build file was auto generated by running the Gradle 'buildSetup' task
 * by 'uwe' at 'Sun Jul 26 18:36:54 CEST 2015' with Gradle 1.6
 *
 * This generated file contains an out - commented sample java project
 * to get you started. For a quick start with Gradle have a look at the Java Quickstart
 * chapter in the Gradle Userguide available at http://gradle.org/docs/1.6/userguide/tutorial_java_projects.html
 */


apply plugin:'java' // applies the java plugin
apply plugin: 'eclipse'
apply plugin:'application'

mainClassName = "org.spiderplan.runnable.Planning"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories{
    mavenCentral() // Use 'maven central' for resolving your thirdparty dependencies.
                   // you can declare any maven/ivy/file repository to resolve your thirdparty dependencies
}

dependencies{
  compile 'net.sf.jung:jung2:2.0.1'
  compile 'net.sf.jung:jung-graph-impl:2.0.1'
  compile 'net.sf.jung:jung-algorithms:2.0.1'
  compile 'net.sf.jung:jung-visualization:2.0.1'
  compile 'jfree:jfreechart:1.0.13'
  compile 'junit:junit:4.12'
  
  // The production code uses the SLF4J logging API at compile time
  compile 'org.slf4j:slf4j-api:1.7.13'
  // http://mvnrepository.com/artifact/com.google.guava/guava
	//compile group: 'com.google.guava', name: 'guava', version: '19.0'
    // http://mvnrepository.com/artifact/net.sourceforge.owlapi/owlapi-distribution
	compile group: 'net.sourceforge.owlapi', name: 'owlapi-distribution', version:'3.5.4'
	// http://mvnrepository.com/artifact/org.apache.jena/jena-arq
	compile group: 'org.apache.jena', name: 'jena-arq', version: '3.1.0'
	//java library for HMM
	//compile 'io.github.adrianulbona:hmm:0.1.0'	
}

run {

    main = "org.spiderplan.runnable.Planning"
    classpath = sourceSets.main.runtimeClasspath 
    
    minHeapSize = "256m"
		maxHeapSize = "4096m"
    
    jvmArgs '-noverify'

    /* Can pass all the properties: */
    systemProperties System.getProperties()

    /* Need to split the space-delimited value in the exec.args */
    args System.getProperty("exec.args").split()    
}

test {
	testLogging {
		showStandardStreams = true
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '1.6'
}
